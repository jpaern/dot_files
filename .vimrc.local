" -- display -------------------------------------------------------------------

if exists("+colorcolumn")
  set colorcolumn=81          " display a marker after column 80
endif

set nocompatible              " be iMproved, required
filetype off                  " required

" set the runtime path to include Vundle and initialize
set rtp+=~/.vim/bundle/Vundle.vim
call vundle#begin()
" alternatively, pass a path where Vundle should install plugins
"call vundle#begin('~/some/path/here')

" let Vundle manage Vundle, required
Plugin 'VundleVim/Vundle.vim'
" The following are examples of different formats supported.
" Keep Plugin commands between vundle#begin/end.
" plugin on GitHub repo
Plugin 'tpope/vim-fugitive'
Plugin 'airblade/vim-gitgutter'
Plugin 'altercation/vim-colors-solarized'
Plugin 'bling/vim-airline'
Plugin 'Valloric/YouCompleteMe'
Plugin 'fholgado/minibufexpl.vim'
Plugin 'majutsushi/tagbar'
Plugin 'vim-scripts/indentpython.vim'
Plugin 'kien/ctrlp.vim'
" Plugin 'scrooloose/syntastic'
Plugin 'nvie/vim-flake8'
Plugin 'junegunn/fzf.vim'
Plugin 'w0rp/ale'
" Plugin 'w0rp/ale'
Plugin 'scrooloose/nerdtree'
Plugin 'tmhedberg/SimpylFold'
Plugin 'delimitMate.vim'

" All of your Plugins must be added before the following line
call vundle#end()            " required
filetype plugin indent on    " required

set guifont=Droid\ Sans\ Mono\ Slashed\ for\ Powerline\ 14
" set guifont=Source\ Code\ Pro\ for\ Powerline\ Medium\ 12

" Airline config, start
let g:airline#extions#tabline#enabled = 1
let g:airline_powerline_fonts = 1
" Airline config, end

" solarized config, start
if has('gui_running')
  set background=dark
  colorscheme solarized
  set guioptions+=e
  set guioptions+=gtrLme
else
  set background=dark
end
" solarized config, end

" Juri config, start
set tabstop=4
set shiftwidth=4
set expandtab
set nowrap
set ai
set showmatch
set textwidth=0
set nu
set hlsearch
set norelativenumber
match ErrorMsg '\%>120v.\+'
match ErrorMsg '\s\+$'
abbr pdbs import pdb; pdb.set_trace()
abbr ipdbs import ipdb; ipdb.set_trace()
" Juri config, end

" YouCompleteMe config, start
" let g:ycm_add_preview_to_completeopt=0
" let g:ycm_confirm_extra_conf=0
" YouCompleteMe config, end

" Syntastic config, start
set statusline+=%#warningmsg#
set statusline+=%{SyntasticStatuslineFlag()}
set statusline+=%*

let g:syntastic_always_populate_loc_list = 1
let g:syntastic_auto_loc_list = 1
let g:syntastic_check_on_open = 1
let g:syntastic_check_on_wq = 0
" Syntastic config, end

" Nerdtree config, start
map <C-n> :NERDTreeToggle<CR>
let g:NERDTreeWinSize=20
" Nerdtree config, end
